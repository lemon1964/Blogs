name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  SKIP_DEPLOYMENT: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') }}

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Set Lint Status to Pending
        uses: actions/create-status@v1
        with:
          context: lint-check
          state: pending
          description: "Linting in progress"
          sha: ${{ github.sha }}

      - name: Lint
        run: npm run lint
        id: lint-check

      - name: Set Lint Status
        if: success()
        uses: actions/create-status@v1
        with:
          context: lint-check
          state: success
          description: "Linting passed"
          sha: ${{ github.sha }}

      - name: Set Lint Status (Fail)
        if: failure()
        uses: actions/create-status@v1
        with:
          context: lint-check
          state: failure
          description: "Linting failed"
          sha: ${{ github.sha }}

      - name: Build
        run: npm run build:client
        id: build-check
        continue-on-error: true

      - name: Build Failure Notification
        if: steps.build-check.outcome == 'failure'
        run: |
          BASE_URL="${{ secrets.BASE_URL }}"
          WEBHOOK_PATH="${{ secrets.WEBHOOK_PATH }}"
          FULL_URL="${BASE_URL}${WEBHOOK_PATH}"
          CURRENT_TIME=$(date +"%Y-%m-%d %H:%M:%S")
          curl -X POST -H "Content-Type: application/json" -d '{
            "username": "lemon196417",
            "content": "Build Failure Detected",
            "embeds": [{
              "title": "Build Failure",
              "description": "Commit [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}) by ${{ github.actor }} broke the build. You can view the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.",
              "color": 15158332,
              "footer": {
                "text": "Severity: Error • '"$CURRENT_TIME"'"
              }
            }]
          }' "$FULL_URL"

  #     - name: Start Local Server
  #       run: |
  #         npm run dev:server &
  #         echo $! > server.pid  # Сохранение PID процесса
  #       id: start-server
  #       env:
  #         MONGODB_URI: ${{ secrets.MONGODB_URI }}
  #         PORT: 3003
  #         SECRET: ${{ secrets.SECRET }}

  #     - name: Wait for Local Server to be ready
  #       run: npx wait-on http://localhost:3003
  #       id: wait-server

  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps
        
  #     - name: Test Client
  #       run: npm run test:client
  #       id: test-check-client

  #     - name: Test Server
  #       run: npm run test:server
  #       id: test-check-server
  #       env:
  #         NODE_ENV: test
  #         TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  #         PORT: 3004
  #         SECRET: ${{ secrets.SECRET }}

  #     - name: Playwright tests
  #       run: npm run test:e2e
  #       id: test-check-e2e

  #     - uses: actions/upload-artifact@v4
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  #     - name: Stop Local Server
  #       run: kill $(cat server.pid)
  #       if: always()

  #     - name: Trigger deployment
  #       if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
  #       run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  #     - name: Deploy to Render
  #       if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
  #       run: |
  #         echo "Deploying to Render"
  #         git push https://github.com/lemon1964/Blogs.git HEAD:main

  #     - name: Send Discord Notification on Successful Deployment
  #       if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
  #       run: |
  #         BASE_URL="${{ secrets.BASE_URL }}"
  #         WEBHOOK_PATH="${{ secrets.WEBHOOK_PATH }}"
  #         FULL_URL="${BASE_URL}${WEBHOOK_PATH}"
  #         CURRENT_TIME=$(date +"%Y-%m-%d %H:%M:%S")
  #         curl -X POST -H "Content-Type: application/json" -d '{
  #           "username": "lemon196417",
  #           "content": "A new version of Blogs has deployed!",
  #           "embeds": [{
  #             "title": "Deployment Details",
  #             "description": "Deployed to [lemon1964-Blogs-render](https://blogs-jaml.onrender.com/) by lemon1964",
  #             "color": 3066993,
  #             "footer": {
  #               "text": "Severity: Informational • '"$CURRENT_TIME"'"
  #             }
  #           }]
  #         }' "$FULL_URL"
        
  #     - name: Log Webhook Result
  #       run: echo "Webhook message sent successfully."
        

  # tag_release:
  #   needs: [simple_deployment_pipeline]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  
  #     - name: Bump version and push tag
  #       if: github.ref == 'refs/heads/main' && env.SKIP_DEPLOYMENT == 'false'
  #       uses: anothrNick/github-tag-action@1.71.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         WITH_V: true

