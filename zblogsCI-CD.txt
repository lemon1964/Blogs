Делаю папку Blogs.
Копирую папку blogs_backend в папку Blogs.
Переименовываю папку blogs_backend в server.
server/package.json
 "name": "server",

cd server
npm run dev

Копирую папку blogs_redux в папку Blogs.
Переименовываю папку blogs_redux в client.
server/package.json
 "name": "client",

cd client
npm run dev

Общий package.json
cd Blogs
npm install

Переносим в корень .env

npm run dev:server      ОК
npm run dev:client      ОК

.eslintrc.cjs
npm install --save-dev eslint eslint-plugin-react eslint-plugin-react-refresh eslint-plugin-vitest eslint-plugin-prettier @eslint/js @stylistic/eslint-plugin-js prettier

  "lint": "eslint . --ext .js,.jsx --report-unused-disable-directives --max-warnings 0"

npm run lint
npx prettier --write .
npm run lint -- --fix
        npx eslint . --ext .js,.jsx --fix

    "test:server": "cross-env NODE_ENV=test node --test server/tests",
    "test:client": "vitest run",

npm run test:server     ОК
npm run test:client     ОК

npm init playwright@latest

"scripts": {
  "test:e2e": "npx playwright test tests/playwright",
  "test:report": "playwright show-report"
}

tests/playwright/front-page.spec.js

module.exports = defineConfig({
  testDir: './tests',

npm run test:e2e -- --project chromium
npx playwright codegen http://localhost:5173/

rm -rf e2e
rm -rf tests-examples

npm run test
--------------------------

Сборка в продакшен
    "build:client": "vite build",
    "build:ui": "npm run build:client && git add . && git commit -m 'Deploy client build'",
    "deploy:full": "npm run build:ui && git push"

const path = require('path');
// Используем express для отдачи статических файлов
app.use(express.static(path.join(__dirname, 'public')));
// Обрабатываем маршруты, которые не начинаются с /api
app.get('*', (req, res) => {
  res.sendFile(path.resolve(__dirname, 'public', 'index.html'));
});


git init .
.gitignore
Делаем новый репозиторий Blogs на гитхаб
git remote add origin https://github.com/lemon1964/Blogs.git
git add .
git commit -m "Initial commit"
git branch -M main
git push -u origin main

git rm --cached .env
git rm --cached .DS_Store
git rm --cached -r client/public
git rm --cached server/.DS_Store
git add .
git commit -m "Update .gitignore and remove unnecessary files"
git push



npm run deploy:full





